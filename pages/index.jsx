import { deleteUser, getUsers } from '@/lib/fetcher';
import { deleteAction, toggleChangeAction } from '@/redux/reducer';
import Head from 'next/head';
import { useReducer, useState } from 'react';
import { BiCheck, BiUserPlus, BiX } from 'react-icons/bi';
import { useQueryClient } from 'react-query';
import { useDispatch, useSelector } from 'react-redux';
import AddUserForm from '../components/AddUserForm';
import Table from '../components/Table';
import UpdateUserForm from '../components/UpdateUserForm';

const formReducer = (state, event) => {
	return {
		...state,
		[event.target.name]: event.target.value
	};
};

const Home = () => {
	const [formData, setFormData] = useReducer(formReducer, {});

	const visible = useSelector(state => state.app.client.toggleForm);

	const formId = useSelector(state => state.app.client.formId);

	const deleteId = useSelector(state => state.app.client.deleteId);
	const queryclient = useQueryClient();

	const dispatch = useDispatch();

	const handler = () => {
		dispatch(toggleChangeAction());
	};

	const deletehandler = async () => {
		if (deleteId) {
			await deleteUser(deleteId);
			await queryclient.prefetchQuery('users', getUsers);
			await dispatch(deleteAction(null));
		}
	};

	const canclehandler = async () => {
		console.log('cancel');
		await dispatch(deleteAction(null));
	};

	return (
		<section className='flex items-center justify-center w-screen min-h-screen bg-black text-white'>
			<Head>
				<title>React-Query+Redux Crud</title>
				<meta
					name='description'
					content='Generated by create next app'
				/>
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className='py-5'>
				<h1 className='text-xl md:text-5xl text-center font-bold p-10'>
					Employee Management
				</h1>

				<div className='container mx-auto flex flex-row justify-between py-5 border-b'>
					<div className='left flex gap-3'>
						<button
							className='flex bg-indigo-500 px-4 py-2 rounded-md hover:bg-gray-50  hover:text-gray-800'
							onClick={handler}
						>
							Add Employee
							<span className='px-1'>
								<BiUserPlus size={23} />
							</span>
						</button>
					</div>
					{deleteId ? (
						DeleteComponent({ deletehandler, canclehandler })
					) : (
						<></>
					)}
				</div>
				{/* collapsible form */}
				<div className='container mx-auto py-5'>
					{visible ? (
						formId ? (
							<UpdateUserForm
								{...{
									formId,
									formData,
									setFormData,
									formReducer,
									action: 'update'
								}}
							/>
						) : (
							<AddUserForm
								{...{
									formData,
									setFormData,
									formReducer,
									action: 'add'
								}}
							/>
						)
					) : null}
				</div>

				<div className='container mx-auto overflow-x-auto rounded-lg'>
					<Table />
				</div>
			</main>
		</section>
	);
};

export default Home;

const DeleteComponent = ({ deletehandler, canclehandler }) => {
	return (
		<div className='flex gap-5'>
			<button>Are you sure?</button>
			<button
				onClick={deletehandler}
				className='flex bg-red-500 text-white px-4 py-2 border rounded-md hover:bg-rose-500 hover:border-red-500 hover:text-gray-50'
			>
				Yes
				<span className='px-1'>
					<BiX color='rgb(255 255 255)' size={25} />
				</span>
			</button>
			<button
				onClick={canclehandler}
				className='flex bg-green-500 text-white px-4 py-2 border rounded-md hover:bg-gree-500 hover:border-green-500 hover:text-gray-50'
			>
				No
				<span className='px-1'>
					<BiCheck color='rgb(255 255 255)' size={25} />
				</span>
			</button>
		</div>
	);
};
